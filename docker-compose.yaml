version: '3.8'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    restart: always

  acme-companion:
    image: nginxproxy/acme-companion
    environment:
      - DEFAULT_EMAIL=hello@minzique.net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VIRTUAL_HOST=jobcafe.lk
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=jobcafe.lk
    expose:
      - "3000"
    depends_on:
      - api
    volumes:
      - logos:/app/public/logos:ro

  api:
    build:
      context: ./job-listings-api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/jobs
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=False
      - VIRTUAL_HOST=api.your-domain.com
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=api.your-domain.com
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    restart: always
    volumes:
      - logos:/app/static/logos:ro

  scraper:
    build:
      context: ./job-listings-api
      dockerfile: Dockerfile.scraper
    command: celery -A src.services.tasks worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/jobs
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: always

  scheduler:
    build:
      context: ./job-listings-api
      dockerfile: Dockerfile.scraper
    command: celery -A src.services.tasks beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/jobs
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: always

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=jobs
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  logos:
    image: alpine
    volumes:
      - logos:/logos
    command: sh -c "while true; do sleep 86400; done"  # Keeps container alive
    restart: always

volumes:
  postgres_data:
  redis_data:
  certs:
  vhost:
  html:
  acme:
  logos:
