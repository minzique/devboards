version: '3.8'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    restart: always

  acme-companion:
    image: nginxproxy/acme-companion
    environment:
      - DEFAULT_EMAIL=${ACME_EMAIL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VIRTUAL_HOST=${FRONTEND_DOMAIN}
      - VIRTUAL_PORT=${FRONTEND_PORT}
      - LETSENCRYPT_HOST=${FRONTEND_DOMAIN}
    expose:
      - "${FRONTEND_PORT}"
    depends_on:
      - api
    volumes:
      - logos:/app/public/logos:ro

  api:
    build:
      context: ./job-listings-api
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - DEBUG=${DEBUG}
      - VIRTUAL_HOST=${API_DOMAIN}
      - VIRTUAL_PORT=${API_PORT}
      - LETSENCRYPT_HOST=${API_DOMAIN}
    expose:
      - "${API_PORT}"
    depends_on:
      - db
      - redis
    restart: always
    # volumes:
    #   - logos:/app/static/logos:ro

  scraper:
    build:
      context: ./job-listings-api
      dockerfile: Dockerfile.scraper
    command: celery -A src.services.tasks worker --loglevel=info
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - db
      - redis
    restart: always

  scheduler:
    build:
      context: ./job-listings-api
      dockerfile: Dockerfile.scraper
    command: celery -A src.services.tasks beat --loglevel=info
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - redis
    restart: always

  db:
    image: postgres:15-alpine
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data

  # logos:
  #   image: alpine
  #   volumes:
  #     - logos:/logos
  #   command: sh -c "while true; do sleep 86400; done"  # Keeps container alive
  #   restart: always

volumes:
  postgres_data:
  redis_data:
  certs:
  vhost:
  html:
  acme:
  # logos:
